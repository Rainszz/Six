1,MainActivity中用到自定义的BottomNavigationViewEx：
    https://github.com/ittianyu/BottomNavigationViewEx
2，使用Looger日志框架，并进行封装：
    https://github.com/Winfred1989/logger
3,真机测试中发现android5.0之前版本的手机不支持SVG，会报错
    原因5.0之前不支持svg图片，即时加入了兼容库部分控件也不能在xml布局文件直接使用，需要在java代码添加
    背景为svg图片，例如：
    BaseActivity-->initView():
        btn_left.setBackgroundResource(R.drawable.ic_back);
4,因为需要自定义的标题栏所以app的样式需要使用没有actionbar并且默认背景为白色的样式：
    style.xml:
        <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
5,图片资源使用svg图片，从iconfont阿里巴巴图标库获取
6,adapter相关的封装:
    http://www.cniao5.com/forum/thread/2ac69d820f0611e790dc00163e0230fa
7,Android RecyclerView通用适配器，支持Header、Footer、LoadMore、EmptyView等功能:
    http://www.jianshu.com/p/c86a39f4e811
8,网络请求的封装：我们用的是Okhttputils按道理是应该封装的，但是okhttputils已经满足大部分项目需求所以才没有封装的
    http://www.jianshu.com/p/96f55f19c1e4
9,ImageLoader的封装使用：http://www.jianshu.com/p/d8890404d87b
    String url = http://i2.buimg.com/567571/d208d52913b997bb.jpg?imageView2/2/w/200;
    ImageView photoView = new ImageView();
    //判断缓存中是否已经缓存过该图片，有则直接拿Bitmap，没有则直接调用Glide加载并缓存Bitmap
    Bitmap bitmap = LruCacheUtils.getInstance().getBitmapFromMemCache(url);
    if (bitmap != null) {
         photoView.setImageBitmap(bitmap);
    } else {
        PhotoLoader.displayImageTarget(photoView, url, getTarget(photoView,url, position));
    }
10,Fragment嵌套Fragment时子Fragment的管理对象应该是getChildFragmentManager();
    activity中：
        fragmentManager = getSupportFragmentManager();
    Fragment中:
        tabNewsAdapter = new TabNewsAdapter(getChildFragmentManager(),list_fragment,list_title);
11,天行数据有分页，但是图片地址有两个问题：
    a，有转义字符：\
    b,有后缀：_ss
    需要进行处理：
        String imgUrl = data.getPicUrl().replace("_ss","").replace("\\","");
12，图片样式用:android:scaleType="centerCrop|center"
13,多级联动选择器：
    https://github.com/Bigkoo/Android-PickerView
14,图片拍照选择上传：
    https://github.com/donglua/PhotoPicker
    https://github.com/crazycodeboy/TakePhoto
    https://github.com/Yalantis/uCrop
    https://github.com/TangXiaoLv/TelegramGallery/blob/master/README_CN.md
    https://github.com/YancyYe/ImageSelector（使用的）
15，夜间模式：
    MODE_NIGHT_NO 日间模式
    MODE_NIGHT_YES 夜间模式
    MODE_NIGHT_AUTO 根据时间自动切换日夜间模式
    MODE_NIGHT_FOLLOW_SYSTEM 默认模式，就是跟随系统的设置，
        据说有可能以后会在android系统设置中添加日夜间模式的设置，
        此时如果你的app是默认模式，会根据系统设置变化日夜间模式
    继承AppCompatActivity，app的sdk最低版本在14以上，
    你在任何地方都可以调用AppCompatDelegate.setDefaultNightMode(xxx)，因为这是个静态方法，
    设置完之后新开启的页面，都会采用新的模式。你需要在每次切换模式之后，把当前模式保存在本地，
    然后在下次打开app的时候，获取当前模式并调用这个方法设置一下，就可以使app保持之前的模式。
16，版本更新：
    http://www.jianshu.com/p/2ab0459a9c3c
17,U盟统计
    http://dev.umeng.com/analytics/android-doc/integration#
18，美团多渠道打包解决方案：
	http://tech.meituan.com/mt-apk-packaging.html
	http://tech.meituan.com/mt-apk-adaptation.html
	新一代开源Android渠道包生成工具Walle
	http://tech.meituan.com/android-apk-v2-signature-scheme.html
	https://github.com/Meituan-Dianping/walle
	--Android打包之多版本、多环境、多渠道
	http://www.jianshu.com/p/872dc6f89cb4
	http://www.jianshu.com/p/0ba717f7385f
	--all
	http://www.jianshu.com/p/18ed910e7b03
	360加固打包签名：
	http://www.jianshu.com/p/06764b0d9e33（简单）
	http://jiagu.360.cn/qcmshtml/details.html#helper
	U盟打包：
	http://www.jianshu.com/p/83fc87868ea5
19，Android热更新方案
	meituan：
	http://tech.meituan.com/android_autopatch.html
	tinker：
	https://github.com/Tencent/tinker/wiki/Tinker-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97
	http://www.jianshu.com/p/aadcf2ea69a6（简单）
	http://www.jianshu.com/p/18ed910e7b03（简单）
20，Android单元测试研究与实践：
	http://tech.meituan.com/Android_unit_test.html
21，基于 Appium 的 Android UI 自动化测试：
	http://tech.meituan.com/appium-mock-test.html
22，Android App包瘦身优化实践：
	http://tech.meituan.com/android-shrink-overall-solution.html
	https://github.com/shwenzhang/AndResGuard/blob/master/README.zh-cn.md
23，如何构建Android MVVM 应用框架：
	http://tech.meituan.com/android_mvvm.html
24，5分钟搞定android混淆：
	http://www.jianshu.com/p/f3455ecaa56e

